// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gamesell.data.Concrete.EfCore;

namespace gamesell.data.Migrations
{
    [DbContext(typeof(PlayPointContext))]
    [Migration("20220605064823_InitialUpdate")]
    partial class InitialUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("gamesell.entity.ActivationCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivationCountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ACs");
                });

            modelBuilder.Entity("gamesell.entity.BalanceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("PayBtnInfo")
                        .HasColumnType("bit");

                    b.Property<string>("SE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bs");
                });

            modelBuilder.Entity("gamesell.entity.CameraPerspective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CameraPerspevtiveName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CPs");
                });

            modelBuilder.Entity("gamesell.entity.CartItemP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("CartpId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartpId");

                    b.HasIndex("ProductId");

                    b.ToTable("CIs");
                });

            modelBuilder.Entity("gamesell.entity.CartItemPOG", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("CartpogId")
                        .HasColumnType("int");

                    b.Property<int>("POGId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartpogId");

                    b.HasIndex("POGId");

                    b.ToTable("CIpogs");
                });

            modelBuilder.Entity("gamesell.entity.CartP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cartps");
                });

            modelBuilder.Entity("gamesell.entity.CartPOG", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cartpogs");
                });

            modelBuilder.Entity("gamesell.entity.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CurrencyConst")
                        .HasColumnType("float");

                    b.Property<string>("CurrencyIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyStringConst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Curs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyConst = 1.0,
                            CurrencyIcon = "$",
                            CurrencyName = "USD",
                            CurrencyStringConst = "1",
                            IsApproved = true,
                            LanguageTag = "en"
                        },
                        new
                        {
                            Id = 2,
                            CurrencyConst = 1.7,
                            CurrencyIcon = "₼",
                            CurrencyName = "AZN",
                            CurrencyStringConst = "1.7",
                            IsApproved = true,
                            LanguageTag = "az"
                        },
                        new
                        {
                            Id = 3,
                            CurrencyConst = 15.199999999999999,
                            CurrencyIcon = "₺",
                            CurrencyName = "TL",
                            CurrencyStringConst = "15.2",
                            IsApproved = true,
                            LanguageTag = "tr"
                        },
                        new
                        {
                            Id = 4,
                            CurrencyConst = 68.579999999999998,
                            CurrencyIcon = "₽",
                            CurrencyName = "RUB",
                            CurrencyStringConst = "68.58",
                            IsApproved = true,
                            LanguageTag = "ru"
                        });
                });

            modelBuilder.Entity("gamesell.entity.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Back_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeveloperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Devs");
                });

            modelBuilder.Entity("gamesell.entity.Divice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Divs");
                });

            modelBuilder.Entity("gamesell.entity.GameCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("GCs");
                });

            modelBuilder.Entity("gamesell.entity.GameItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GNId")
                        .HasColumnType("int");

                    b.Property<string>("GameItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("GIs");
                });

            modelBuilder.Entity("gamesell.entity.GameName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameOfName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("GNs");
                });

            modelBuilder.Entity("gamesell.entity.IndexSlider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndexSliderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ISs");
                });

            modelBuilder.Entity("gamesell.entity.InstructionPanel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("POG")
                        .HasColumnType("bit");

                    b.Property<bool>("Product")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IPs");
                });

            modelBuilder.Entity("gamesell.entity.Janra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("JanraName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jans");
                });

            modelBuilder.Entity("gamesell.entity.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApproved = true,
                            LanguageName = "English",
                            LanguageTag = "en"
                        },
                        new
                        {
                            Id = 2,
                            IsApproved = true,
                            LanguageName = "Azerbaycan",
                            LanguageTag = "az"
                        },
                        new
                        {
                            Id = 3,
                            IsApproved = true,
                            LanguageName = "Türkce",
                            LanguageTag = "tr"
                        },
                        new
                        {
                            Id = 4,
                            IsApproved = true,
                            LanguageName = "Русский",
                            LanguageTag = "ru"
                        });
                });

            modelBuilder.Entity("gamesell.entity.LanguageText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("LaguageId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LTs");
                });

            modelBuilder.Entity("gamesell.entity.PaymentPHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BuyDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsXbox")
                        .HasColumnType("bit");

                    b.Property<double>("PaymentBalance")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PPHs");
                });

            modelBuilder.Entity("gamesell.entity.PaymentPOGHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BuyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("POGId")
                        .HasColumnType("int");

                    b.Property<double>("PaymentBalance")
                        .HasColumnType("float");

                    b.Property<string>("UserIdBuy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIdSell")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PPOGHs");
                });

            modelBuilder.Entity("gamesell.entity.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApproved = true,
                            Link = "/guide/steam",
                            PlatformName = "Steam"
                        },
                        new
                        {
                            Id = 2,
                            IsApproved = true,
                            Link = "/guide/epic",
                            PlatformName = "Epic Games"
                        },
                        new
                        {
                            Id = 3,
                            IsApproved = true,
                            Link = "/guide/origin",
                            PlatformName = "Origin"
                        },
                        new
                        {
                            Id = 4,
                            IsApproved = true,
                            Link = "/guide/uplay",
                            PlatformName = "Uplay"
                        },
                        new
                        {
                            Id = 5,
                            IsApproved = true,
                            Link = "/guide/xbox",
                            PlatformName = "Xbox"
                        });
                });

            modelBuilder.Entity("gamesell.entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Activation_countryID")
                        .HasColumnType("int");

                    b.Property<string>("Activation_zone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CameraperspectiveID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<bool>("Co_op")
                        .HasColumnType("bit");

                    b.Property<string>("Company_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ConstNumber")
                        .HasColumnType("float");

                    b.Property<int>("Contenttype")
                        .HasColumnType("int");

                    b.Property<int>("DeveloperID")
                        .HasColumnType("int");

                    b.Property<int>("Discount_percent")
                        .HasColumnType("int");

                    b.Property<bool>("IndexSlider")
                        .HasColumnType("bit");

                    b.Property<bool>("Instock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProduct")
                        .HasColumnType("bit");

                    b.Property<int>("JanraID")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Main_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Multiplayer")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number_of_sale")
                        .HasColumnType("int");

                    b.Property<bool>("Onlineornot")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("PublisherID")
                        .HasColumnType("int");

                    b.Property<int?>("PurchasedProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Signleplayer")
                        .HasColumnType("bit");

                    b.Property<string>("Slider_img1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slider_img2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slider_img3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slider_videolink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stocksize")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Type_active")
                        .HasColumnType("bit");

                    b.Property<bool>("UpComing")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VR")
                        .HasColumnType("bit");

                    b.Property<bool>("threeD")
                        .HasColumnType("bit");

                    b.Property<bool>("twoD")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PurchasedProductId");

                    b.ToTable("Pros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "img_0ec4d3e8-8f98-4c68-8af3-b3672987ffcb.jpg",
                            Multiplayer = false,
                            Name = "Battlefront 2",
                            Number_of_sale = 3,
                            Onlineornot = false,
                            PlatformID = 3,
                            Price = 7.0,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 151, DateTimeKind.Local).AddTicks(4830),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test14534538",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 2,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "img_3d346b88-d5ec-41f7-ae95-6a487fa0b3a0.jpg",
                            Multiplayer = false,
                            Name = "Halo MasterChief Collection",
                            Number_of_sale = 4,
                            Onlineornot = false,
                            PlatformID = 5,
                            Price = 6.0,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3001),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test212345",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 3,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "mine.jpg",
                            Multiplayer = false,
                            Name = "Minecraft",
                            Number_of_sale = 5,
                            Onlineornot = false,
                            PlatformID = 5,
                            Price = 3.5,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3016),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test3579514682",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 4,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "img_f0280d90-db9b-4844-a5c5-f08d4d435a67.jpeg",
                            Multiplayer = false,
                            Name = "Satisfactory",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 1,
                            Price = 4.0,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3020),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test893544",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 5,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "img_89ae6783-eb4a-47ac-b192-ce42ae710610.jpg",
                            Multiplayer = false,
                            Name = "CS-GO",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 1,
                            Price = 3.0,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3174),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test55555",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 6,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 10,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "img_48908ff5-99e5-4234-b9c4-37797e80664e.jpg",
                            Multiplayer = false,
                            Name = "Cyberpunk 2077",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 1,
                            Price = 6.0,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3176),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test4546321124",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 7,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "Csmqlce.jpg",
                            Multiplayer = false,
                            Name = "God of War Ragnarok",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 1,
                            Price = 8.0,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3307),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "testtetersssss",
                            Type_active = false,
                            UpComing = true,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 8,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "starfield.jpg",
                            Multiplayer = false,
                            Name = "Starfield",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 5,
                            Price = 7.0,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3310),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test41321535646",
                            Type_active = false,
                            UpComing = true,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 9,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "Hogwarts_Legacy_cover.jpg",
                            Multiplayer = false,
                            Name = "Hogwarts Legacy",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 5,
                            Price = 6.5,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3311),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "testasd4das64a5sd",
                            Type_active = false,
                            UpComing = true,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 10,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "Forspoken.jfif",
                            Multiplayer = false,
                            Name = "Forspoken",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 2,
                            Price = 4.5,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3312),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "tes78900",
                            Type_active = false,
                            UpComing = true,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 11,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "SaintsRow.jfif",
                            Multiplayer = false,
                            Name = "Saints Row",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 4,
                            Price = 3.5,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3314),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test564",
                            Type_active = false,
                            UpComing = true,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 12,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "f5.jpg",
                            Multiplayer = false,
                            Name = "Forza Horizon 5",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 5,
                            Price = 5.5,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3315),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test123456",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 13,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "r6.webp",
                            Multiplayer = false,
                            Name = "TC's Rainbow Six Siege",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 4,
                            Price = 2.0,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3316),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test798526",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 14,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "apex.jpg",
                            Multiplayer = false,
                            Name = "Apex Legends",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 3,
                            Price = 3.0,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3317),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test8523694",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 15,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "bm.jpg",
                            Multiplayer = false,
                            Name = "Black Mesa",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 1,
                            Price = 2.5,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3318),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test7418524",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        },
                        new
                        {
                            Id = 16,
                            Activation_countryID = 0,
                            CameraperspectiveID = 0,
                            CategoryID = 0,
                            Co_op = false,
                            ConstNumber = 0.0,
                            Contenttype = 0,
                            DeveloperID = 0,
                            Discount_percent = 0,
                            IndexSlider = false,
                            Instock = false,
                            IsApproved = true,
                            IsProduct = true,
                            JanraID = 0,
                            Main_img = "metro_exodus.jpg",
                            Multiplayer = false,
                            Name = "Metro Exodus",
                            Number_of_sale = 0,
                            Onlineornot = false,
                            PlatformID = 1,
                            Price = 4.5,
                            PublisherID = 0,
                            ReleaseDate = new DateTime(2022, 6, 5, 10, 48, 23, 152, DateTimeKind.Local).AddTicks(3319),
                            Signleplayer = false,
                            Stocksize = 0,
                            Text = "test456123951",
                            Type_active = false,
                            UpComing = false,
                            VR = false,
                            threeD = false,
                            twoD = false
                        });
                });

            modelBuilder.Entity("gamesell.entity.Product_of_Gamer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiviceID")
                        .HasColumnType("int");

                    b.Property<int>("GameItemID")
                        .HasColumnType("int");

                    b.Property<int>("GameNameID")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPOG")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("PurchasedPOGId")
                        .HasColumnType("int");

                    b.Property<string>("Slider_img1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slider_img2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slider_img3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slider_videolink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchasedPOGId");

                    b.ToTable("POGs");
                });

            modelBuilder.Entity("gamesell.entity.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Back_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pubs");
                });

            modelBuilder.Entity("gamesell.entity.PurchasedPOG", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("POGId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PPOGs");
                });

            modelBuilder.Entity("gamesell.entity.PurchasedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsXbox")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PPs");
                });

            modelBuilder.Entity("gamesell.entity.Xboxdata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Img1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("SPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("XDs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Img1 = "img_1fcdfa1d-56d0-4912-b6c3-e262322d684f.jpg",
                            Img2 = "2.webp",
                            Img3 = "3.jpg",
                            Img4 = "4.jpg",
                            Img5 = "5.webp",
                            Price = 1.0,
                            Title = "Xbox"
                        });
                });

            modelBuilder.Entity("gamesell.entity.Xboxgame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("XGs");
                });

            modelBuilder.Entity("gamesell.entity.CartItemP", b =>
                {
                    b.HasOne("gamesell.entity.CartP", "Cartp")
                        .WithMany("CartItemps")
                        .HasForeignKey("CartpId");

                    b.HasOne("gamesell.entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartp");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("gamesell.entity.CartItemPOG", b =>
                {
                    b.HasOne("gamesell.entity.CartPOG", "Cartpog")
                        .WithMany("CartItempogs")
                        .HasForeignKey("CartpogId");

                    b.HasOne("gamesell.entity.Product_of_Gamer", "POG")
                        .WithMany()
                        .HasForeignKey("POGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartpog");

                    b.Navigation("POG");
                });

            modelBuilder.Entity("gamesell.entity.Product", b =>
                {
                    b.HasOne("gamesell.entity.PurchasedProduct", null)
                        .WithMany("Products")
                        .HasForeignKey("PurchasedProductId");
                });

            modelBuilder.Entity("gamesell.entity.Product_of_Gamer", b =>
                {
                    b.HasOne("gamesell.entity.PurchasedPOG", null)
                        .WithMany("POGs")
                        .HasForeignKey("PurchasedPOGId");
                });

            modelBuilder.Entity("gamesell.entity.CartP", b =>
                {
                    b.Navigation("CartItemps");
                });

            modelBuilder.Entity("gamesell.entity.CartPOG", b =>
                {
                    b.Navigation("CartItempogs");
                });

            modelBuilder.Entity("gamesell.entity.PurchasedPOG", b =>
                {
                    b.Navigation("POGs");
                });

            modelBuilder.Entity("gamesell.entity.PurchasedProduct", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
